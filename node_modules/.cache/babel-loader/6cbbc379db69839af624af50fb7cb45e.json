{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/MainComponents/AthleteHompage.js\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport './Homepage.css';\nimport WOD from '../AthleteComponents.js/WOD';\nimport { Grid, Image } from 'semantic-ui-react';\nimport PrevWOD from '../AthleteComponents.js/PrevWOD';\nimport Benchmarks from '../AthleteComponents.js/Benchmarks';\n\nclass AthleteHompage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      workouts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wodshare.herokuapp.com/athlete/workouts', {\n      method: \"GET\",\n      headers: {\n        Authorisation: localStorage.token\n      }\n    }).then(resp => resp.json()).then(workouts => this.setState({\n      workouts\n    }));\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          coach_name = _this$props$user.coach_name,\n          first_name = _this$props$user.first_name;\n    const workouts = this.state.workouts;\n    const today = new Date();\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    const formatedDate = date.split(\"-\");\n    const WODDatePT1 = formatedDate[1].length > 1 ? formatedDate[0] + \"-0\" + formatedDate[1] + \"-\" + formatedDate[2] : formatedDate[0] + \"-0\" + formatedDate[1] + \"-0\" + formatedDate[2];\n    console.log(formatedDate, WODDate, date);\n    const workoutOfTheDay = workouts.find(workout => workout.date === WODDate);\n    const PrevWODSSort = workouts.sort((a, b) => {\n      return new Date(a.date) - new Date(b.date);\n    }).filter(workout => new Date(workout.date) < new Date(WODDate));\n    const PrevWODS = PrevWODSSort.slice(Math.max(PrevWODSSort.length - 5)); // const WelcomeWordArr = [first_name, \"Beast, Monster, Champion, Engine\"]\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"wod-layout\",\n      name: \"wod-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Welcome Back \", first_name, \"!\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      textAlign: \"center\",\n      columns: 2,\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Workout of the Day\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, workoutOfTheDay ? undefined : \"None\"), coach_name === null ? undefined : workoutOfTheDay && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Assigned by Coach \", coach_name), workoutOfTheDay ? React.createElement(WOD, {\n      workout: workoutOfTheDay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : undefined), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Benchmarks, Object.assign({}, this.props.user, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Previous Workouts\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, workouts[1] ? undefined : \"None\"), React.createElement(Grid, {\n      columns: 5,\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, PrevWODS[0] && PrevWODS.reverse().map(workout => React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(PrevWOD, {\n      workout: workout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nexport default AthleteHompage; // <h1>Benchmarks</h1>\n// <h2>Deadlift</h2>\n// <h3>{deadlift} KG</h3> \n// <h2>Backsquat</h2>\n// <h3>{backsquat} KG</h3> \n// <h2>Clean & Jerk</h2>\n// <h3>{clean_and_jerk} KG</h3> \n// <h2>Snatch</h2>\n// <h3>{snatch} KG</h3> \n// <h2>Strict Press</h2>\n// <h3>{strict_press} KG</h3>","map":{"version":3,"sources":["/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/MainComponents/AthleteHompage.js"],"names":["BrowserRouter","Router","Route","Link","React","Component","WOD","Grid","Image","PrevWOD","Benchmarks","AthleteHompage","state","workouts","componentDidMount","fetch","method","headers","Authorisation","localStorage","token","then","resp","json","setState","render","props","user","coach_name","first_name","today","Date","date","getFullYear","getMonth","getDate","formatedDate","split","WODDatePT1","length","console","log","WODDate","workoutOfTheDay","find","workout","PrevWODSSort","sort","a","b","filter","PrevWODS","slice","Math","max","undefined","reverse","map"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport './Homepage.css'\nimport WOD from '../AthleteComponents.js/WOD';\nimport { Grid, Image } from 'semantic-ui-react'\nimport PrevWOD from '../AthleteComponents.js/PrevWOD';\nimport Benchmarks from '../AthleteComponents.js/Benchmarks';\n\n\n\nclass AthleteHompage extends Component {\n    state = { \n        workouts: []\n     }\n\n    componentDidMount() {\n        fetch('https://wodshare.herokuapp.com/athlete/workouts',{\n            method: \"GET\",\n            headers: {\n                Authorisation: localStorage.token,\n            }\n        })\n        .then(resp => resp.json())\n        .then(workouts => this.setState({workouts}))\n    }\n    render() {\n        const { coach_name, first_name } = this.props.user \n        const { workouts } = this.state\n\n        const today = new Date();\n        const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        const formatedDate = date.split(\"-\")\n        const WODDatePT1 = formatedDate[1].length > 1 ? formatedDate[0] + \"-0\" + formatedDate[1] + \"-\" + formatedDate[2] : formatedDate[0] + \"-0\" + formatedDate[1] + \"-0\" + formatedDate[2]\n        console.log(formatedDate, WODDate, date)\n\n        const workoutOfTheDay = workouts.find(workout => workout.date === WODDate)\n        const PrevWODSSort = workouts.sort((a,b) => {return new Date(a.date) - new Date(b.date);}).filter(workout => new Date(workout.date) < new Date(WODDate))\n        const PrevWODS = PrevWODSSort.slice(Math.max(PrevWODSSort.length - 5))\n        // const WelcomeWordArr = [first_name, \"Beast, Monster, Champion, Engine\"]\n         \n\n        return (\n            <>\n                <div className=\"wod-layout\" name=\"wod-layout\">\n                <h2 className=\"h2\">Welcome Back {first_name}!</h2> <br/><br/>\n                <Grid textAlign={\"center\"} columns={2} divided>\n                    <Grid.Row>\n                    <Grid.Column>\n                        <h1 className='text'>Workout of the Day</h1>\n                        <h2>{workoutOfTheDay? undefined : \"None\"}</h2>\n                        {coach_name === null? undefined  : workoutOfTheDay&&<h1>Assigned by Coach {coach_name}</h1>}\n                         {workoutOfTheDay? <WOD workout={workoutOfTheDay}/> : undefined}\n\n                    </Grid.Column>\n                    <Grid.Column>\n\n                        <Benchmarks {...this.props.user}/>\n                    \n                    </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                        \n                    <Grid.Column>\n                    <br/><br/><h1 className='text'>Previous Workouts</h1>\n                        <h2>{workouts[1]? undefined : \"None\"}</h2>\n                        <Grid columns={5} divided >\n                            <Grid.Row>\n                                {PrevWODS[0]&& PrevWODS.reverse().map(workout => (\n                                <Grid.Column>\n                                    <PrevWOD workout={workout}/>\n                                </Grid.Column>\n                                ))}\n                            </Grid.Row>\n                        </Grid>\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default AthleteHompage;\n\n// <h1>Benchmarks</h1>\n// <h2>Deadlift</h2>\n// <h3>{deadlift} KG</h3> \n// <h2>Backsquat</h2>\n// <h3>{backsquat} KG</h3> \n// <h2>Clean & Jerk</h2>\n// <h3>{clean_and_jerk} KG</h3> \n// <h2>Snatch</h2>\n// <h3>{snatch} KG</h3> \n// <h2>Strict Press</h2>\n// <h3>{strict_press} KG</h3>  "]},"metadata":{},"sourceType":"module"}