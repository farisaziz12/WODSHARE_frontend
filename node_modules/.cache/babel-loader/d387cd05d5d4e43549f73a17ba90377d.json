{"ast":null,"code":"const BASE_URL = \"http://localhost:3000\";\nconst ATHLETE_VALIDATE_URL = BASE_URL + \"/athlete/validate\";\nconst COACH_VALIDATE_URL = BASE_URL + \"/coach/validate\";\nconst ATHLETE_LOGIN_URL = BASE_URL + \"/athlete/login\";\nconst COACH_LOGIN_URL = BASE_URL + \"/coach/login\";\nconst ATHLETE_SIGNUP_URL = BASE_URL + \"/athletes\";\nconst COACH_SIGNUP_URL = BASE_URL + \"/coaches\";\n\nfunction loginAthlete(user) {\n  return fetch(ATHLETE_LOGIN_URL, createUserObj(user)).then(JSONresp).then(handleUserResponse);\n}\n\nfunction loginCoach(user) {\n  return fetch(COACH_LOGIN_URL, createUserObj(user)).then(JSONresp).then(handleUserResponse);\n}\n\nfunction createCoachAccount(user) {\n  return fetch(COACH_SIGNUP_URL, createUserObj(user)).then(JSONresp).then(handleUserResponse);\n}\n\nfunction createAthleteAccount(user) {\n  return fetch(ATHLETE_SIGNUP_URL, createUserObj(user)).then(JSONresp).then(handleUserResponse);\n}\n\nfunction SubmitCoachFind(athleteID, coach_email) {\n  return fetch(`http://localhost:3000/athletes/findcoach/${athleteID}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify({\n      coach_email: coach_email\n    })\n  }).then(JSONresp);\n}\n\nfunction deleteAthleteAccount(athleteID) {\n  return fetch;\n}\n\nfunction createObj(obj) {\n  return {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n      \"Authorisation\": localStorage.token\n    },\n    body: JSON.stringify(obj)\n  };\n}\n\nfunction JSONresp(resp) {\n  if (resp.ok) return resp.json();\n  throw resp.json();\n}\n\nfunction handleUserResponse(user) {\n  if (user.token) {\n    localStorage.token = user.token;\n    localStorage.account_type = user.account_type;\n  }\n\n  return user;\n}\n\nfunction createUserObj(user) {\n  return {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  };\n}\n\nfunction validate() {\n  if (localStorage.account_type === \"athlete\") {\n    return fetch(ATHLETE_VALIDATE_URL, {\n      method: \"GET\",\n      headers: {\n        Authorisation: localStorage.token\n      }\n    }).then(JSONresp).then(handleUserResponse);\n  } else if (localStorage.account_type === \"coach\") {\n    return fetch(COACH_VALIDATE_URL, {\n      method: \"GET\",\n      headers: {\n        Authorisation: localStorage.token\n      }\n    }).then(JSONresp).then(handleUserResponse);\n  }\n}\n\nexport default {\n  loginAthlete,\n  SubmitCoachFind,\n  loginCoach,\n  validate,\n  createCoachAccount,\n  createAthleteAccount,\n  hasToken: () => !!localStorage.token,\n  clearToken: () => localStorage.removeItem(\"token\") && localStorage.removeItem(\"account_type\")\n};","map":{"version":3,"sources":["/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/API.js"],"names":["BASE_URL","ATHLETE_VALIDATE_URL","COACH_VALIDATE_URL","ATHLETE_LOGIN_URL","COACH_LOGIN_URL","ATHLETE_SIGNUP_URL","COACH_SIGNUP_URL","loginAthlete","user","fetch","createUserObj","then","JSONresp","handleUserResponse","loginCoach","createCoachAccount","createAthleteAccount","SubmitCoachFind","athleteID","coach_email","method","headers","body","JSON","stringify","deleteAthleteAccount","createObj","obj","localStorage","token","resp","ok","json","account_type","validate","Authorisation","hasToken","clearToken","removeItem"],"mappings":"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","sourcesContent":["const BASE_URL = \"http://localhost:3000\";\nconst ATHLETE_VALIDATE_URL = BASE_URL + \"/athlete/validate\"\nconst COACH_VALIDATE_URL = BASE_URL + \"/coach/validate\"\nconst ATHLETE_LOGIN_URL = BASE_URL + \"/athlete/login\";\nconst COACH_LOGIN_URL = BASE_URL + \"/coach/login\";\nconst ATHLETE_SIGNUP_URL = BASE_URL + \"/athletes\";\nconst COACH_SIGNUP_URL = BASE_URL + \"/coaches\";\n\n\nfunction loginAthlete(user) {\n    \n    return fetch(ATHLETE_LOGIN_URL, createUserObj(user))\n        .then(JSONresp)\n        .then(handleUserResponse)\n} \n\nfunction loginCoach(user) {\n    \n    return fetch(COACH_LOGIN_URL, createUserObj(user))\n        .then(JSONresp)\n        .then(handleUserResponse)\n} \n\nfunction createCoachAccount(user) {\n    return fetch(COACH_SIGNUP_URL, createUserObj(user))\n        .then(JSONresp)\n        .then(handleUserResponse)\n}\n\nfunction createAthleteAccount(user) {\n    return fetch(ATHLETE_SIGNUP_URL, createUserObj(user))\n        .then(JSONresp)\n        .then(handleUserResponse)\n}\n\n\n\nfunction SubmitCoachFind(athleteID, coach_email) {\n    return fetch(`http://localhost:3000/athletes/findcoach/${athleteID}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                coach_email: coach_email\n            })\n        }).then(JSONresp)\n}\n\nfunction deleteAthleteAccount(athleteID) {\n    return fetch \n}\n\n\nfunction createObj(obj) {\n\n    return {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorisation\": localStorage.token\n        },\n        body: JSON.stringify(obj)\n    }\n}\n\nfunction JSONresp(resp) {\n    if (resp.ok) return resp.json();\n    throw resp.json();\n}\n\nfunction handleUserResponse(user) {\n    if (user.token) {\n        localStorage.token = user.token;\n        localStorage.account_type = user.account_type\n    }\n    return user;\n}\n\nfunction createUserObj(user) {\n    return {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    }\n}\n\nfunction validate() {\n    if (localStorage.account_type === \"athlete\") {\n        return fetch(ATHLETE_VALIDATE_URL, {\n            method: \"GET\",\n            headers: {\n                Authorisation: localStorage.token,\n            }\n        }).then(JSONresp).then(handleUserResponse);\n    } else if (localStorage.account_type === \"coach\") {\n        return fetch(COACH_VALIDATE_URL, {\n            method: \"GET\",\n            headers: {\n                Authorisation: localStorage.token,\n            }\n        }).then(JSONresp).then(handleUserResponse);\n    }\n}\n\nexport default {loginAthlete,\n    SubmitCoachFind,\n    loginCoach,\n    validate,\n    createCoachAccount,\n    createAthleteAccount,\n    hasToken: () => !!localStorage.token,\n    clearToken: () => localStorage.removeItem(\"token\")  && localStorage.removeItem(\"account_type\")\n};"]},"metadata":{},"sourceType":"module"}