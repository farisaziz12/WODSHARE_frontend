{"ast":null,"code":"// import React, { Component } from 'react'\n// import { Button, Form, Select, Message } from 'semantic-ui-react'\n// import API from '../API'\n// import './CreateAccountForm.css'\n// class CreateAccountForm extends Component {\n//     state = { \n//         first_name: null, \n//         last_name: null, \n//         email: null, \n//         account_type: null,\n//         password: null, \n//         password_confirmation: null,\n//         password_error: false, \n//         success: false, \n//         error: null\n//      }\n//      handleChange = e => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         })\n//      }\n//      handleAccountTypeChange = (e, {value}) => {\n//             this.setState({account_type: value})\n//      }\n//      handleSubmit = () => {\n//         const { first_name, last_name, password, password_confirmation, email } = this.state\n//         if (password === password_confirmation) {\n//             this.setState({password_error: false})\n//             if (this.state.account_type === \"coach\") {\n//                 this.setState({password_error: false})\n//                 API.createCoachAccount({\n//                     coach: {\n//                         first_name: first_name,\n//                         last_name: last_name,\n//                         password: password,\n//                         email: email\n//                     }\n//                 }).then(this.setState({success: true}))\n//                 .then(user => \n//                     setTimeout(() => {this.props.onSuccess(user)}, 2000)\n//                 ).catch(errorPromise => errorPromise.then(error => this.setState({error: error.message})))\n//             } else if (this.state.account_type === \"athlete\") {\n//                 API.createAthleteAccount({\n//                     athlete: {\n//                         first_name: first_name,\n//                         last_name: last_name,\n//                         password: password,\n//                         email: email\n//                     }\n//                 })\n//                 .then(this.setState({success: true}))\n//                 .then(user => \n//                     setTimeout(() => {this.props.onSuccess(user)}, 2000)\n//                 ).catch(errorPromise => errorPromise.then(error => this.setState({error: error.message}))).then(this.setState({success: false}))\n//             }\n//         } else {\n//             this.setState({password_error: true})\n//         }\n//     }\n//     render() {\n//         const options = [\n//             { key: 'athlete', value: 'athlete', text: 'Athlete' },\n//             { key: 'coach', value: 'coach', text: 'Coach' }\n//           ]\n//         const { first_name, last_name, password, password_confirmation, email, password_error } = this.state\n//         return (\n//             <Form onSubmit={this.handleSubmit} success>\n//                 <h1>Create Account</h1>\n//                 {this.state.error&& <h3 className='h3'>{this.state.error}</h3>}\n//                 <Form.Field required >\n//                     <label>First Name</label>\n//                     <input placeholder=\"Bob\" type = \"text\" name = \"first_name\" value = {first_name} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     <label>Last Name</label>\n//                     <input placeholder=\"Bobson\" type = \"text\" name = \"last_name\" value = {last_name} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     <label>Email</label>\n//                     <input placeholder=\"bobbythebuilder@gmail.com\" type = \"text\" name = \"email\" value = {email} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     {password_error? <h3 className=\"h3\" >Passwords do not match!</h3> : undefined}\n//                     <label>Password</label>\n//                     <input type = \"password\" name = \"password\" value = {password} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     <label>Password Confirmation</label>\n//                     <input type = \"password\" name = \"password_confirmation\" value = {password_confirmation} onChange = {this.handleChange}></input>\n//                 </Form.Field >\n//                 <Form.Field required>\n//                     <label>Please choose an account type</label>\n//                     <Select placeholder='Account Type' onChange = {this.handleAccountTypeChange} options={options} />\n//                 </Form.Field>\n//                 {this.state.success&&\n//                     <Message\n//                         success\n//                         header='Account created'\n//                         content=\"You're all signed up for WODSHARE\"\n//                     />\n//                 }\n//                     <Button type='submit'>Create Account</Button>\n//             </Form>\n//         );\n//     }\n// }\n// export default CreateAccountForm;","map":{"version":3,"sources":["/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/MainComponents/CreateAccountForm.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react'\n// import { Button, Form, Select, Message } from 'semantic-ui-react'\n// import API from '../API'\n// import './CreateAccountForm.css'\n\n\n\n// class CreateAccountForm extends Component {\n//     state = { \n//         first_name: null, \n//         last_name: null, \n//         email: null, \n//         account_type: null,\n//         password: null, \n//         password_confirmation: null,\n//         password_error: false, \n//         success: false, \n//         error: null\n//      }\n\n//      handleChange = e => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         })\n//      }\n\n//      handleAccountTypeChange = (e, {value}) => {\n//             this.setState({account_type: value})\n//      }\n\n//      handleSubmit = () => {\n//         const { first_name, last_name, password, password_confirmation, email } = this.state\n       \n//         if (password === password_confirmation) {\n//             this.setState({password_error: false})\n            \n//             if (this.state.account_type === \"coach\") {\n//                 this.setState({password_error: false})\n//                 API.createCoachAccount({\n//                     coach: {\n//                         first_name: first_name,\n//                         last_name: last_name,\n//                         password: password,\n//                         email: email\n//                     }\n//                 }).then(this.setState({success: true}))\n//                 .then(user => \n//                     setTimeout(() => {this.props.onSuccess(user)}, 2000)\n//                 ).catch(errorPromise => errorPromise.then(error => this.setState({error: error.message})))\n\n//             } else if (this.state.account_type === \"athlete\") {\n//                 API.createAthleteAccount({\n//                     athlete: {\n//                         first_name: first_name,\n//                         last_name: last_name,\n//                         password: password,\n//                         email: email\n//                     }\n//                 })\n//                 .then(this.setState({success: true}))\n//                 .then(user => \n//                     setTimeout(() => {this.props.onSuccess(user)}, 2000)\n//                 ).catch(errorPromise => errorPromise.then(error => this.setState({error: error.message}))).then(this.setState({success: false}))\n//             }\n\n//         } else {\n//             this.setState({password_error: true})\n//         }\n//     }\n\n//     render() {\n//         const options = [\n//             { key: 'athlete', value: 'athlete', text: 'Athlete' },\n//             { key: 'coach', value: 'coach', text: 'Coach' }\n//           ]\n//         const { first_name, last_name, password, password_confirmation, email, password_error } = this.state\n//         return (\n//             <Form onSubmit={this.handleSubmit} success>\n//                 <h1>Create Account</h1>\n//                 {this.state.error&& <h3 className='h3'>{this.state.error}</h3>}\n//                 <Form.Field required >\n//                     <label>First Name</label>\n//                     <input placeholder=\"Bob\" type = \"text\" name = \"first_name\" value = {first_name} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     <label>Last Name</label>\n//                     <input placeholder=\"Bobson\" type = \"text\" name = \"last_name\" value = {last_name} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     <label>Email</label>\n//                     <input placeholder=\"bobbythebuilder@gmail.com\" type = \"text\" name = \"email\" value = {email} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     {password_error? <h3 className=\"h3\" >Passwords do not match!</h3> : undefined}\n//                     <label>Password</label>\n//                     <input type = \"password\" name = \"password\" value = {password} onChange = {this.handleChange}></input>\n//                 </Form.Field>\n//                 <Form.Field required>\n//                     <label>Password Confirmation</label>\n//                     <input type = \"password\" name = \"password_confirmation\" value = {password_confirmation} onChange = {this.handleChange}></input>\n//                 </Form.Field >\n//                 <Form.Field required>\n//                     <label>Please choose an account type</label>\n//                     <Select placeholder='Account Type' onChange = {this.handleAccountTypeChange} options={options} />\n//                 </Form.Field>\n//                 {this.state.success&&\n//                     <Message\n//                         success\n//                         header='Account created'\n//                         content=\"You're all signed up for WODSHARE\"\n//                     />\n//                 }\n//                     <Button type='submit'>Create Account</Button>\n//             </Form>\n//         );\n//     }\n// }\n\n// export default CreateAccountForm;"]},"metadata":{},"sourceType":"module"}