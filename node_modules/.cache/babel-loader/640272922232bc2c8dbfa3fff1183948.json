{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/CoachComponents.js/AssignWorkoutForm.js\";\nimport React, { Component } from 'react';\nimport { Grid, Form, Message, Select, Button } from 'semantic-ui-react';\nimport './AssignWorkout.css';\n\nclass AssignWorkoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      success: false,\n      name: null,\n      wod_type: null,\n      category: null,\n      date: null,\n      workout: null,\n      athlete: this.props.athleteID\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleTypeChange = e => {\n      this.setState({\n        wod_type: e.target.value\n      });\n    };\n\n    this.handleCategoryChange = e => {\n      this.setState({\n        category: e.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            wod_type = _this$state.wod_type,\n            category = _this$state.category,\n            date = _this$state.date,\n            workout = _this$state.workout,\n            athlete = _this$state.athlete;\n      fetch('https://wodshare.herokuapp.com/workouts', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          workout: {\n            name: name,\n            wod_type: wod_type,\n            category: category,\n            date: date,\n            workout: workout,\n            athlete_id: athlete,\n            coach_id: this.props.coachID\n          }\n        })\n      }).then(this.setState({\n        success: true,\n        name: \"\",\n        wod_type: \"\",\n        date: \"\",\n        category: \"\",\n        workout: \"\"\n      }));\n    };\n  }\n\n  render() {\n    const categoryOptions = [{\n      key: 'g',\n      text: 'Gymnastics',\n      value: 'Gymnastics'\n    }, {\n      key: 'm',\n      text: 'Metabolic Conditioning',\n      value: 'Metabolic Conditioning'\n    }, {\n      key: 'w',\n      text: 'Weightlifting',\n      value: 'Weightlifting'\n    }, {\n      key: 'p',\n      text: 'Powerlifting',\n      value: 'Powerlifting'\n    }, {\n      key: 's',\n      text: 'Strength',\n      value: 'Strength'\n    }];\n    const typeOptions = [{\n      key: 'c',\n      text: 'Couplet',\n      value: 'Couplet'\n    }, {\n      key: 'ch',\n      text: 'Chipper',\n      value: 'Chipper'\n    }, {\n      key: 't',\n      text: 'Triplet',\n      value: 'Triplet'\n    }, {\n      key: 'h',\n      text: 'Hypertrophy',\n      value: 'Hypertrophy'\n    }, {\n      key: 'm',\n      text: 'Muscular Endurance',\n      value: 'Muscular Endurance'\n    }];\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          wod_type = _this$state2.wod_type,\n          category = _this$state2.category,\n          date = _this$state2.date,\n          workout = _this$state2.workout;\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Assign \", this.props.athleteName, \" a Workout\"), React.createElement(\"div\", {\n      class: \"blackboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name: \"), React.createElement(\"input\", {\n      placeholder: \"Fran\",\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Category: \"), React.createElement(\"select\", {\n      className: \"select-txt\",\n      onChange: this.handleCategoryChange,\n      placeholder: \"Gymnastics\",\n      id: \"category\",\n      name: \"category\",\n      form: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Gymnastics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Gymnastics\"), React.createElement(\"option\", {\n      value: \"Metabolic Conditioning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Metabolic Conditioning\"), React.createElement(\"option\", {\n      value: \"opel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Opel\"), React.createElement(\"option\", {\n      value: \"audi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Audi\"))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Phone: \"), React.createElement(\"input\", {\n      type: \"tel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Subject: \"), React.createElement(\"input\", {\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Message: \"), React.createElement(\"textarea\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      class: \"wipeout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default AssignWorkoutForm; //     <Grid>\n//         <Grid.Row centered>\n//             <Grid.Column width={6}>\n//                 <Form size={\"small\"} onSubmit={this.handleSubmit} success>\n//                     <h1>Assign {this.props.athleteName} a Workout</h1>\n//                     <Form.Field >\n//                         <label>Name</label>\n//                         <input placeholder=\"Fran\" type = \"text\" name = \"name\" value = {name} onChange = {this.handleChange}></input>\n//                     </Form.Field>\n//                     <Form.Select onChange={this.handleCategoryChange} required  name='category' fluid label='Category' placeholder='Gymnastics' options={categoryOptions} value={category} />\n//                     <Form.Select onChange={this.handleTypeChange} required name='type' fluid label='Type' placeholder='Couplet' options={typeOptions} value={wod_type} />\n//                     <Form.Field required>\n//                         <label>Date</label>\n//                         <input type = \"date\" name = \"date\" value = {date} onChange = {this.handleChange}></input>\n//                     </Form.Field>\n//                     <Form.TextArea required label='Workout' name = \"workout\" value = {workout} onChange = {this.handleChange}/>\n//                 {this.state.success?\n//                     <Message\n//                         success\n//                         header='Workout created'\n//                         content=\"Your athlete is all set to tackle this workout!\"\n//                     />\n//                     :\n//                     undefined\n//                 }\n//                     <Button onSubmit={this.handleSubmit} type='submit'>Create Workout</Button>\n//             </Form>\n//         </Grid.Column>\n//     </Grid.Row>\n// </Grid>","map":{"version":3,"sources":["/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/CoachComponents.js/AssignWorkoutForm.js"],"names":["React","Component","Grid","Form","Message","Select","Button","AssignWorkoutForm","state","success","name","wod_type","category","date","workout","athlete","props","athleteID","handleChange","e","setState","target","value","handleTypeChange","handleCategoryChange","handleSubmit","fetch","method","headers","body","JSON","stringify","athlete_id","coach_id","coachID","then","render","categoryOptions","key","text","typeOptions","athleteName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {  Grid, Form, Message, Select, Button} from 'semantic-ui-react'\nimport './AssignWorkout.css'\n\nclass AssignWorkoutForm extends Component {\n    state = { \n        success: false, \n        name: null, \n        wod_type: null, \n        category: null, \n        date: null, \n        workout: null,\n        athlete: this.props.athleteID\n    \n     }\n\n\n     handleChange = e => {\n        this.setState({\n           [e.target.name]: e.target.value\n        })\n     }\n\n     handleTypeChange = (e) => {\n           this.setState({wod_type: e.target.value})\n        \n    }\n\n    handleCategoryChange = (e) => {\n        this.setState({category: e.target.value})\n    }\n\n    handleSubmit = () => {\n        const { name, wod_type, category, date, workout, athlete } = this.state\n        fetch('https://wodshare.herokuapp.com/workouts', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                workout: {\n                    name: name, \n                    wod_type: wod_type, \n                    category: category,\n                    date: date,\n                    workout: workout, \n                    athlete_id: athlete, \n                    coach_id: this.props.coachID\n                }\n            })\n        }).then(this.setState({success:true, name: \"\", wod_type: \"\", date: \"\", category: \"\", workout: \"\"}))\n    }\n\n\n    render() {\n        const categoryOptions = [\n        { key: 'g', text: 'Gymnastics', value: 'Gymnastics' },\n        { key: 'm', text: 'Metabolic Conditioning', value: 'Metabolic Conditioning' },\n        { key: 'w', text: 'Weightlifting', value: 'Weightlifting' },\n        {key: 'p', text: 'Powerlifting', value: 'Powerlifting' },\n        {key: 's', text: 'Strength', value: 'Strength' }]\n\n        const typeOptions = [\n            { key: 'c', text: 'Couplet', value: 'Couplet' },\n            { key: 'ch', text: 'Chipper', value: 'Chipper' },\n            { key: 't', text: 'Triplet', value: 'Triplet' },\n            {key: 'h', text: 'Hypertrophy', value: 'Hypertrophy' },\n            {key: 'm', text: 'Muscular Endurance', value: 'Muscular Endurance' }]\n        const { name, wod_type, category, date, workout } = this.state\n        return (\n            <>\n            <h1>Assign {this.props.athleteName} a Workout</h1>\n                <div class=\"blackboard\">\n                        <div class=\"form\">\n                                <p>\n                                        <label>Name: </label>\n                                        <input placeholder=\"Fran\" type = \"text\" name = \"name\" value = {name} onChange = {this.handleChange}></input>\n                                </p>\n                                <p>\n                                        <label>Category: </label>\n                                        {/* <input type=\"select\" onChange={this.handleCategoryChange} required  name='category' placeholder='Gymnastics' options={categoryOptions} value={category}/> */}\n                                        <select className=\"select-txt\" onChange={this.handleCategoryChange} placeholder='Gymnastics' id=\"category\" name=\"category\" form=\"category\">\n                                            <option value=\"Gymnastics\">Gymnastics</option>\n                                            <option value=\"Metabolic Conditioning\">Metabolic Conditioning</option>\n                                            <option value=\"opel\">Opel</option>\n                                            <option value=\"audi\">Audi</option>\n                                        </select>\n                                </p>\n                                <p>\n                                        <label>Phone: </label>\n                                        <input type=\"tel\" />\n                                </p>\n                                <p>\n                                        <label>Subject: </label>\n                                        <input type=\"date\" />\n                                </p>\n                                <p>\n                                        <label>Message: </label>\n                                        <textarea></textarea>\n                                </p>\n                                <p class=\"wipeout\">\n                                        <input type=\"submit\" value=\"Send\" />\n                                </p>\n                        </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default AssignWorkoutForm;\n        //     <Grid>\n        //         <Grid.Row centered>\n        //             <Grid.Column width={6}>\n        //                 <Form size={\"small\"} onSubmit={this.handleSubmit} success>\n        //                     <h1>Assign {this.props.athleteName} a Workout</h1>\n        //                     <Form.Field >\n        //                         <label>Name</label>\n        //                         <input placeholder=\"Fran\" type = \"text\" name = \"name\" value = {name} onChange = {this.handleChange}></input>\n        //                     </Form.Field>\n        //                     <Form.Select onChange={this.handleCategoryChange} required  name='category' fluid label='Category' placeholder='Gymnastics' options={categoryOptions} value={category} />\n                            \n        //                     <Form.Select onChange={this.handleTypeChange} required name='type' fluid label='Type' placeholder='Couplet' options={typeOptions} value={wod_type} />\n                            \n        //                     <Form.Field required>\n        //                         <label>Date</label>\n        //                         <input type = \"date\" name = \"date\" value = {date} onChange = {this.handleChange}></input>\n        //                     </Form.Field>\n        //                     <Form.TextArea required label='Workout' name = \"workout\" value = {workout} onChange = {this.handleChange}/>\n        //                 {this.state.success?\n        //                     <Message\n        //                         success\n        //                         header='Workout created'\n        //                         content=\"Your athlete is all set to tackle this workout!\"\n        //                     />\n        //                     :\n        //                     undefined\n        //                 }\n        //                     <Button onSubmit={this.handleSubmit} type='submit'>Create Workout</Button>\n        //             </Form>\n        //         </Grid.Column>\n        //     </Grid.Row>\n        // </Grid>"]},"metadata":{},"sourceType":"module"}