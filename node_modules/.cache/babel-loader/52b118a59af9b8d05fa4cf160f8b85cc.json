{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/MainComponents/AthleteHompage.js\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport './Homepage.css';\nimport WOD from '../AthleteComponents.js/WOD';\nimport { Grid, Image } from 'semantic-ui-react';\nimport PrevWOD from '../AthleteComponents.js/PrevWOD';\nimport Benchmarks from '../AthleteComponents.js/Benchmarks';\n\nclass AthleteHompage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      workouts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://wodshare.herokuapp.com/athlete/workouts', {\n      method: \"GET\",\n      headers: {\n        Authorisation: localStorage.token\n      }\n    }).then(resp => resp.json()).then(workouts => this.setState({\n      workouts\n    }));\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          coach_name = _this$props$user.coach_name,\n          first_name = _this$props$user.first_name;\n    const workouts = this.state.workouts;\n    const today = new Date();\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    const formatedDate = date.split(\"-\");\n    const WODDate = formatedDate[0] + \"-0\" + formatedDate[1] + \"-0\" + formatedDate[2];\n    const workoutOfTheDay = workouts.find(workout => workout.date === WODDate);\n    const PrevWODSSort = workouts.sort((a, b) => {\n      return new Date(a.date) - new Date(b.date);\n    }).filter(workout => new Date(workout.date) < new Date(WODDate));\n    const PrevWODS = PrevWODSSort.slice(Math.max(PrevWODSSort.length - 5)); // test\n\n    let words = document.getElementsByClassName('word');\n    let wordArray = [];\n    let currentWord = 0;\n    words[currentWord].style.opacity = 1;\n\n    for (let i = 0; i < words.length; i++) {\n      splitLetters(words[i]);\n    }\n\n    function changeWord() {\n      let cw = wordArray[currentWord];\n      let nw = currentWord == words.length - 1 ? wordArray[0] : wordArray[currentWord + 1];\n\n      for (let i = 0; i < cw.length; i++) {\n        animateLetterOut(cw, i);\n      }\n\n      for (let i = 0; i < nw.length; i++) {\n        nw[i].className = 'letter behind';\n        nw[0].parentElement.style.opacity = 1;\n        animateLetterIn(nw, i);\n      }\n\n      currentWord = currentWord == wordArray.length - 1 ? 0 : currentWord + 1;\n    }\n\n    function animateLetterOut(cw, i) {\n      setTimeout(function () {\n        cw[i].className = 'letter out';\n      }, i * 80);\n    }\n\n    function animateLetterIn(nw, i) {\n      setTimeout(function () {\n        nw[i].className = 'letter in';\n      }, 340 + i * 80);\n    }\n\n    function splitLetters(word) {\n      let content = word.innerHTML;\n      word.innerHTML = '';\n      let letters = [];\n\n      for (let i = 0; i < content.length; i++) {\n        let letter = document.createElement('span');\n        letter.className = 'letter';\n        letter.innerHTML = content.charAt(i);\n        word.appendChild(letter);\n        letters.push(letter);\n      }\n\n      wordArray.push(letters);\n    }\n\n    changeWord();\n    setInterval(changeWord, 4000);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"wod-layout\",\n      name: \"wod-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Welcome Back \", first_name, \"!\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      textAlign: \"center\",\n      columns: 2,\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Workout of the Day\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, workoutOfTheDay ? undefined : \"None\"), coach_name === null ? undefined : workoutOfTheDay && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Assigned by Coach \", coach_name), workoutOfTheDay ? React.createElement(WOD, {\n      workout: workoutOfTheDay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : undefined), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Benchmarks, Object.assign({}, this.props.user, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Previous Workouts\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, workouts[1] ? undefined : \"None\"), React.createElement(Grid, {\n      columns: 5,\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, PrevWODS[0] && PrevWODS.reverse().map(workout => React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(PrevWOD, {\n      workout: workout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nexport default AthleteHompage; // <h1>Benchmarks</h1>\n// <h2>Deadlift</h2>\n// <h3>{deadlift} KG</h3> \n// <h2>Backsquat</h2>\n// <h3>{backsquat} KG</h3> \n// <h2>Clean & Jerk</h2>\n// <h3>{clean_and_jerk} KG</h3> \n// <h2>Snatch</h2>\n// <h3>{snatch} KG</h3> \n// <h2>Strict Press</h2>\n// <h3>{strict_press} KG</h3>","map":{"version":3,"sources":["/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/MainComponents/AthleteHompage.js"],"names":["BrowserRouter","Router","Route","Link","React","Component","WOD","Grid","Image","PrevWOD","Benchmarks","AthleteHompage","state","workouts","componentDidMount","fetch","method","headers","Authorisation","localStorage","token","then","resp","json","setState","render","props","user","coach_name","first_name","today","Date","date","getFullYear","getMonth","getDate","formatedDate","split","WODDate","workoutOfTheDay","find","workout","PrevWODSSort","sort","a","b","filter","PrevWODS","slice","Math","max","length","words","document","getElementsByClassName","wordArray","currentWord","style","opacity","i","splitLetters","changeWord","cw","nw","animateLetterOut","className","parentElement","animateLetterIn","setTimeout","word","content","innerHTML","letters","letter","createElement","charAt","appendChild","push","setInterval","undefined","reverse","map"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport './Homepage.css'\nimport WOD from '../AthleteComponents.js/WOD';\nimport { Grid, Image } from 'semantic-ui-react'\nimport PrevWOD from '../AthleteComponents.js/PrevWOD';\nimport Benchmarks from '../AthleteComponents.js/Benchmarks';\n\n\n\nclass AthleteHompage extends Component {\n    state = { \n        workouts: []\n     }\n\n    componentDidMount() {\n        fetch('https://wodshare.herokuapp.com/athlete/workouts',{\n            method: \"GET\",\n            headers: {\n                Authorisation: localStorage.token,\n            }\n        })\n        .then(resp => resp.json())\n        .then(workouts => this.setState({workouts}))\n    }\n    render() {\n        const { coach_name, first_name } = this.props.user \n        const { workouts } = this.state\n\n        const today = new Date();\n        const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        const formatedDate = date.split(\"-\")\n        const WODDate = formatedDate[0] + \"-0\" + formatedDate[1] + \"-0\" + formatedDate[2]\n\n        const workoutOfTheDay = workouts.find(workout => workout.date === WODDate)\n\n        const PrevWODSSort = workouts.sort((a,b) => {return new Date(a.date) - new Date(b.date);}).filter(workout => new Date(workout.date) < new Date(WODDate))\n        const PrevWODS = PrevWODSSort.slice(Math.max(PrevWODSSort.length - 5))\n\n\n        // test\n\n        let words = document.getElementsByClassName('word');\n        let wordArray = [];\n        let currentWord = 0;\n\n        words[currentWord].style.opacity = 1;\n        for (let i = 0; i < words.length; i++) {\n        splitLetters(words[i]);\n        }\n\n        function changeWord() {\n        let cw = wordArray[currentWord];\n        let nw = currentWord == words.length-1 ? wordArray[0] : wordArray[currentWord+1];\n        for (let i = 0; i < cw.length; i++) {\n            animateLetterOut(cw, i);\n        }\n        \n        for (let i = 0; i < nw.length; i++) {\n            nw[i].className = 'letter behind';\n            nw[0].parentElement.style.opacity = 1;\n            animateLetterIn(nw, i);\n        }\n        \n        currentWord = (currentWord == wordArray.length-1) ? 0 : currentWord+1;\n        }\n\n        function animateLetterOut(cw, i) {\n        setTimeout(function() {\n                cw[i].className = 'letter out';\n        }, i*80);\n        }\n\n        function animateLetterIn(nw, i) {\n        setTimeout(function() {\n                nw[i].className = 'letter in';\n        }, 340+(i*80));\n        }\n\n        function splitLetters(word) {\n        let content = word.innerHTML;\n        word.innerHTML = '';\n        let letters = [];\n        for (let i = 0; i < content.length; i++) {\n            let letter = document.createElement('span');\n            letter.className = 'letter';\n            letter.innerHTML = content.charAt(i);\n            word.appendChild(letter);\n            letters.push(letter);\n        }\n        \n        wordArray.push(letters);\n        }\n\n        changeWord();\n        setInterval(changeWord, 4000);\n\n        return (\n            <>\n                <div className=\"wod-layout\" name=\"wod-layout\">\n                <h2 className=\"h2\">Welcome Back {first_name}!</h2> <br/><br/>\n\n                {/* test*/}\n                {/*  */}\n                <Grid textAlign={\"center\"} columns={2} divided>\n                    <Grid.Row>\n                    <Grid.Column>\n                        <h1 className='text'>Workout of the Day</h1>\n                        <h2>{workoutOfTheDay? undefined : \"None\"}</h2>\n                        {coach_name === null? undefined  : workoutOfTheDay&&<h1>Assigned by Coach {coach_name}</h1>}\n                         {workoutOfTheDay? <WOD workout={workoutOfTheDay}/> : undefined}\n\n                    </Grid.Column>\n                    <Grid.Column>\n\n                        <Benchmarks {...this.props.user}/>\n                    \n                    </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                        \n                    <Grid.Column>\n                    <br/><br/><h1 className='text'>Previous Workouts</h1>\n                        <h2>{workouts[1]? undefined : \"None\"}</h2>\n                        <Grid columns={5} divided >\n                            <Grid.Row>\n                                {PrevWODS[0]&& PrevWODS.reverse().map(workout => (\n                                <Grid.Column>\n                                    <PrevWOD workout={workout}/>\n                                </Grid.Column>\n                                ))}\n                            </Grid.Row>\n                        </Grid>\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default AthleteHompage;\n\n// <h1>Benchmarks</h1>\n// <h2>Deadlift</h2>\n// <h3>{deadlift} KG</h3> \n// <h2>Backsquat</h2>\n// <h3>{backsquat} KG</h3> \n// <h2>Clean & Jerk</h2>\n// <h3>{clean_and_jerk} KG</h3> \n// <h2>Snatch</h2>\n// <h3>{snatch} KG</h3> \n// <h2>Strict Press</h2>\n// <h3>{strict_press} KG</h3>  "]},"metadata":{},"sourceType":"module"}