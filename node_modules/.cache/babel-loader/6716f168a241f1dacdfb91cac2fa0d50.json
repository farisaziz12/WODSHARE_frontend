{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/MainComponents/CreateAccountForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Select, Message } from 'semantic-ui-react';\nimport API from '../API';\nimport './CreateAccountForm.css';\n\nclass CreateAccountForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      first_name: null,\n      last_name: null,\n      email: null,\n      account_type: null,\n      password: null,\n      password_confirmation: null,\n      password_error: false,\n      success: false,\n      error: null\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleAccountTypeChange = (e, {\n      value\n    }) => {\n      this.setState({\n        account_type: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            first_name = _this$state.first_name,\n            last_name = _this$state.last_name,\n            password = _this$state.password,\n            password_confirmation = _this$state.password_confirmation,\n            email = _this$state.email;\n\n      if (password === password_confirmation) {\n        if (this.state.account_type === \"coach\") {\n          this.setState({\n            password_error: false\n          });\n          API.createCoachAccount({\n            coach: {\n              first_name: first_name,\n              last_name: last_name,\n              password: password,\n              email: email\n            }\n          }).then(this.setState({\n            success: true\n          })).then(user => setTimeout(() => {\n            this.props.onSuccess(user);\n          }, 2000)).catch(errorPromise => errorPromise.then(error => this.setState({\n            error: error.message\n          })));\n        } else if (this.state.account_type === \"athlete\") {\n          API.createAthleteAccount({\n            athlete: {\n              first_name: first_name,\n              last_name: last_name,\n              password: password,\n              email: email\n            }\n          }).then(this.setState({\n            success: true\n          })).then(user => setTimeout(() => {\n            this.props.onSuccess(user);\n          }, 2000)).catch(errorPromise => errorPromise.then(error => this.setState({\n            error: error.message\n          })));\n        }\n      } else {\n        this.setState({\n          password_error: true\n        });\n      }\n    };\n  }\n\n  render() {\n    const options = [{\n      key: 'athlete',\n      value: 'athlete',\n      text: 'Athlete'\n    }, {\n      key: 'coach',\n      value: 'coach',\n      text: 'Coach'\n    }];\n    const _this$state2 = this.state,\n          first_name = _this$state2.first_name,\n          last_name = _this$state2.last_name,\n          password = _this$state2.password,\n          password_confirmation = _this$state2.password_confirmation,\n          email = _this$state2.email,\n          password_error = _this$state2.password_error;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Create Account\"), this.state.error, React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      placeholder: \"Bob\",\n      type: \"text\",\n      name: \"first_name\",\n      value: first_name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      placeholder: \"Bobson\",\n      type: \"text\",\n      name: \"last_name\",\n      value: last_name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      placeholder: \"bobbythebuilder@gmail.com\",\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, password_error ? React.createElement(\"h3\", {\n      className: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Passwords do not match!\") : undefined, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Password Confirmation\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password_confirmation\",\n      value: password_confirmation,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Please choose an account type\"), React.createElement(Select, {\n      placeholder: \"Account Type\",\n      onChange: this.handleAccountTypeChange,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), this.state.success && React.createElement(Message, {\n      success: true,\n      header: \"Account created\",\n      content: \"You're all signed up for WODSHARE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Create Account\"));\n  }\n\n}\n\nexport default CreateAccountForm;","map":{"version":3,"sources":["/Users/farisaziz/Desktop/WODSHARE/WODSHARE_frontend/src/MainComponents/CreateAccountForm.js"],"names":["React","Component","Button","Form","Select","Message","API","CreateAccountForm","state","first_name","last_name","email","account_type","password","password_confirmation","password_error","success","error","handleChange","e","setState","target","name","value","handleAccountTypeChange","handleSubmit","createCoachAccount","coach","then","user","setTimeout","props","onSuccess","catch","errorPromise","message","createAthleteAccount","athlete","render","options","key","text","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Select, Message } from 'semantic-ui-react'\nimport API from '../API'\nimport './CreateAccountForm.css'\n\n\n\nclass CreateAccountForm extends Component {\n    state = { \n        first_name: null, \n        last_name: null, \n        email: null, \n        account_type: null,\n        password: null, \n        password_confirmation: null,\n        password_error: false, \n        success: false, \n        error: null\n     }\n\n     handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n     }\n\n     handleAccountTypeChange = (e, {value}) => {\n            this.setState({account_type: value})\n     }\n\n     handleSubmit = () => {\n        const { first_name, last_name, password, password_confirmation, email } = this.state\n        if (password === password_confirmation) {\n\n            if (this.state.account_type === \"coach\") {\n                this.setState({password_error: false})\n                API.createCoachAccount({\n                    coach: {\n                        first_name: first_name,\n                        last_name: last_name,\n                        password: password,\n                        email: email\n                    }\n                }).then(this.setState({success: true}))\n                .then(user => \n                    setTimeout(() => {this.props.onSuccess(user)}, 2000)\n                ).catch(errorPromise => errorPromise.then(error => this.setState({error: error.message})))\n\n            } else if (this.state.account_type === \"athlete\") {\n                API.createAthleteAccount({\n                    athlete: {\n                        first_name: first_name,\n                        last_name: last_name,\n                        password: password,\n                        email: email\n                    }\n                })\n                .then(this.setState({success: true}))\n                .then(user => \n                    setTimeout(() => {this.props.onSuccess(user)}, 2000)\n                ).catch(errorPromise => errorPromise.then(error => this.setState({error: error.message})))\n            }\n\n        } else {\n            this.setState({password_error: true})\n        }\n    }\n\n    render() {\n        const options = [\n            { key: 'athlete', value: 'athlete', text: 'Athlete' },\n            { key: 'coach', value: 'coach', text: 'Coach' }\n          ]\n        const { first_name, last_name, password, password_confirmation, email, password_error } = this.state\n        return (\n            <Form onSubmit={this.handleSubmit} success>\n                <h1>Create Account</h1>\n                {this.state.error}\n                <Form.Field required>\n                    <label>First Name</label>\n                    <input placeholder=\"Bob\" type = \"text\" name = \"first_name\" value = {first_name} onChange = {this.handleChange}></input>\n                </Form.Field>\n                <Form.Field required>\n                    <label>Last Name</label>\n                    <input placeholder=\"Bobson\" type = \"text\" name = \"last_name\" value = {last_name} onChange = {this.handleChange}></input>\n                </Form.Field>\n                <Form.Field required>\n                    <label>Email</label>\n                    <input placeholder=\"bobbythebuilder@gmail.com\" type = \"text\" name = \"email\" value = {email} onChange = {this.handleChange}></input>\n                </Form.Field>\n                <Form.Field required>\n                    {password_error? <h3 className=\"h3\" >Passwords do not match!</h3> : undefined}\n                    <label>Password</label>\n                    <input type = \"password\" name = \"password\" value = {password} onChange = {this.handleChange}></input>\n                </Form.Field>\n                <Form.Field required>\n                    <label>Password Confirmation</label>\n                    <input type = \"password\" name = \"password_confirmation\" value = {password_confirmation} onChange = {this.handleChange}></input>\n                </Form.Field >\n                <Form.Field required>\n                    <label>Please choose an account type</label>\n                    <Select placeholder='Account Type' onChange = {this.handleAccountTypeChange} options={options} />\n                </Form.Field>\n                {this.state.success&&\n                    <Message\n                        success\n                        header='Account created'\n                        content=\"You're all signed up for WODSHARE\"\n                    />\n                }\n                    <Button type='submit'>Create Account</Button>\n            </Form>\n        );\n    }\n}\n\nexport default CreateAccountForm;"]},"metadata":{},"sourceType":"module"}